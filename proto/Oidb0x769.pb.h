// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Oidb0x769.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_Oidb0x769_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Oidb0x769_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Oidb0x769_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Oidb0x769_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Oidb0x769_2eproto;
namespace Flee {
class ConfigSeq;
struct ConfigSeqDefaultTypeInternal;
extern ConfigSeqDefaultTypeInternal _ConfigSeq_default_instance_;
class QueryUinPackageUsageReq;
struct QueryUinPackageUsageReqDefaultTypeInternal;
extern QueryUinPackageUsageReqDefaultTypeInternal _QueryUinPackageUsageReq_default_instance_;
class ReqBody;
struct ReqBodyDefaultTypeInternal;
extern ReqBodyDefaultTypeInternal _ReqBody_default_instance_;
}  // namespace Flee
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Flee {

// ===================================================================


// -------------------------------------------------------------------

class QueryUinPackageUsageReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Flee.QueryUinPackageUsageReq) */ {
 public:
  inline QueryUinPackageUsageReq() : QueryUinPackageUsageReq(nullptr) {}
  ~QueryUinPackageUsageReq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryUinPackageUsageReq(::google::protobuf::internal::ConstantInitialized);

  inline QueryUinPackageUsageReq(const QueryUinPackageUsageReq& from)
      : QueryUinPackageUsageReq(nullptr, from) {}
  QueryUinPackageUsageReq(QueryUinPackageUsageReq&& from) noexcept
    : QueryUinPackageUsageReq() {
    *this = ::std::move(from);
  }

  inline QueryUinPackageUsageReq& operator=(const QueryUinPackageUsageReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryUinPackageUsageReq& operator=(QueryUinPackageUsageReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryUinPackageUsageReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryUinPackageUsageReq* internal_default_instance() {
    return reinterpret_cast<const QueryUinPackageUsageReq*>(
               &_QueryUinPackageUsageReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryUinPackageUsageReq& a, QueryUinPackageUsageReq& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryUinPackageUsageReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryUinPackageUsageReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryUinPackageUsageReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryUinPackageUsageReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryUinPackageUsageReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueryUinPackageUsageReq& from) {
    QueryUinPackageUsageReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryUinPackageUsageReq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Flee.QueryUinPackageUsageReq";
  }
  protected:
  explicit QueryUinPackageUsageReq(::google::protobuf::Arena* arena);
  QueryUinPackageUsageReq(::google::protobuf::Arena* arena, const QueryUinPackageUsageReq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUinFileSizeFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // optional int64 uinFileSize = 2;
  bool has_uinfilesize() const;
  void clear_uinfilesize() ;
  ::int64_t uinfilesize() const;
  void set_uinfilesize(::int64_t value);

  private:
  ::int64_t _internal_uinfilesize() const;
  void _internal_set_uinfilesize(::int64_t value);

  public:
  // optional int32 type = 1;
  bool has_type() const;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Flee.QueryUinPackageUsageReq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t uinfilesize_;
    ::int32_t type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Oidb0x769_2eproto;
};// -------------------------------------------------------------------

class ConfigSeq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Flee.ConfigSeq) */ {
 public:
  inline ConfigSeq() : ConfigSeq(nullptr) {}
  ~ConfigSeq() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ConfigSeq(::google::protobuf::internal::ConstantInitialized);

  inline ConfigSeq(const ConfigSeq& from)
      : ConfigSeq(nullptr, from) {}
  ConfigSeq(ConfigSeq&& from) noexcept
    : ConfigSeq() {
    *this = ::std::move(from);
  }

  inline ConfigSeq& operator=(const ConfigSeq& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigSeq& operator=(ConfigSeq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfigSeq& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfigSeq* internal_default_instance() {
    return reinterpret_cast<const ConfigSeq*>(
               &_ConfigSeq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConfigSeq& a, ConfigSeq& b) {
    a.Swap(&b);
  }
  inline void Swap(ConfigSeq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfigSeq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfigSeq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ConfigSeq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfigSeq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ConfigSeq& from) {
    ConfigSeq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConfigSeq* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Flee.ConfigSeq";
  }
  protected:
  explicit ConfigSeq(::google::protobuf::Arena* arena);
  ConfigSeq(::google::protobuf::Arena* arena, const ConfigSeq& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kVersionFieldNumber = 2,
  };
  // optional int32 type = 1;
  bool has_type() const;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // optional int32 version = 2;
  bool has_version() const;
  void clear_version() ;
  ::int32_t version() const;
  void set_version(::int32_t value);

  private:
  ::int32_t _internal_version() const;
  void _internal_set_version(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Flee.ConfigSeq)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t type_;
    ::int32_t version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Oidb0x769_2eproto;
};// -------------------------------------------------------------------

class ReqBody final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Flee.ReqBody) */ {
 public:
  inline ReqBody() : ReqBody(nullptr) {}
  ~ReqBody() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReqBody(::google::protobuf::internal::ConstantInitialized);

  inline ReqBody(const ReqBody& from)
      : ReqBody(nullptr, from) {}
  ReqBody(ReqBody&& from) noexcept
    : ReqBody() {
    *this = ::std::move(from);
  }

  inline ReqBody& operator=(const ReqBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqBody& operator=(ReqBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqBody* internal_default_instance() {
    return reinterpret_cast<const ReqBody*>(
               &_ReqBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ReqBody& a, ReqBody& b) {
    a.Swap(&b);
  }
  inline void Swap(ReqBody* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqBody* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqBody* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReqBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReqBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReqBody& from) {
    ReqBody::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReqBody* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Flee.ReqBody";
  }
  protected:
  explicit ReqBody(::google::protobuf::Arena* arena);
  ReqBody(::google::protobuf::Arena* arena, const ReqBody& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigListFieldNumber = 1,
    kInfoFieldNumber = 3,
    kProvinceFieldNumber = 4,
    kCityFieldNumber = 5,
    kQueryUinPackageUsageReqFieldNumber = 101,
    kReqDebugMsgFieldNumber = 6,
  };
  // repeated .Flee.ConfigSeq configList = 1;
  int configlist_size() const;
  private:
  int _internal_configlist_size() const;

  public:
  void clear_configlist() ;
  ::Flee::ConfigSeq* mutable_configlist(int index);
  ::google::protobuf::RepeatedPtrField< ::Flee::ConfigSeq >*
      mutable_configlist();
  private:
  const ::google::protobuf::RepeatedPtrField<::Flee::ConfigSeq>& _internal_configlist() const;
  ::google::protobuf::RepeatedPtrField<::Flee::ConfigSeq>* _internal_mutable_configlist();
  public:
  const ::Flee::ConfigSeq& configlist(int index) const;
  ::Flee::ConfigSeq* add_configlist();
  const ::google::protobuf::RepeatedPtrField< ::Flee::ConfigSeq >&
      configlist() const;
  // optional string info = 3;
  bool has_info() const;
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // optional string province = 4;
  bool has_province() const;
  void clear_province() ;
  const std::string& province() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_province(Arg_&& arg, Args_... args);
  std::string* mutable_province();
  PROTOBUF_NODISCARD std::string* release_province();
  void set_allocated_province(std::string* value);

  private:
  const std::string& _internal_province() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_province(
      const std::string& value);
  std::string* _internal_mutable_province();

  public:
  // optional string city = 5;
  bool has_city() const;
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // optional .Flee.QueryUinPackageUsageReq queryUinPackageUsageReq = 101;
  bool has_queryuinpackageusagereq() const;
  void clear_queryuinpackageusagereq() ;
  const ::Flee::QueryUinPackageUsageReq& queryuinpackageusagereq() const;
  PROTOBUF_NODISCARD ::Flee::QueryUinPackageUsageReq* release_queryuinpackageusagereq();
  ::Flee::QueryUinPackageUsageReq* mutable_queryuinpackageusagereq();
  void set_allocated_queryuinpackageusagereq(::Flee::QueryUinPackageUsageReq* value);
  void unsafe_arena_set_allocated_queryuinpackageusagereq(::Flee::QueryUinPackageUsageReq* value);
  ::Flee::QueryUinPackageUsageReq* unsafe_arena_release_queryuinpackageusagereq();

  private:
  const ::Flee::QueryUinPackageUsageReq& _internal_queryuinpackageusagereq() const;
  ::Flee::QueryUinPackageUsageReq* _internal_mutable_queryuinpackageusagereq();

  public:
  // optional int32 reqDebugMsg = 6;
  bool has_reqdebugmsg() const;
  void clear_reqdebugmsg() ;
  ::int32_t reqdebugmsg() const;
  void set_reqdebugmsg(::int32_t value);

  private:
  ::int32_t _internal_reqdebugmsg() const;
  void _internal_set_reqdebugmsg(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Flee.ReqBody)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      37, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Flee::ConfigSeq > configlist_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    ::google::protobuf::internal::ArenaStringPtr province_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::Flee::QueryUinPackageUsageReq* queryuinpackageusagereq_;
    ::int32_t reqdebugmsg_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Oidb0x769_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConfigSeq

// optional int32 type = 1;
inline bool ConfigSeq::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ConfigSeq::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ConfigSeq::type() const {
  // @@protoc_insertion_point(field_get:Flee.ConfigSeq.type)
  return _internal_type();
}
inline void ConfigSeq::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Flee.ConfigSeq.type)
}
inline ::int32_t ConfigSeq::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void ConfigSeq::_internal_set_type(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_ = value;
}

// optional int32 version = 2;
inline bool ConfigSeq::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ConfigSeq::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t ConfigSeq::version() const {
  // @@protoc_insertion_point(field_get:Flee.ConfigSeq.version)
  return _internal_version();
}
inline void ConfigSeq::set_version(::int32_t value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:Flee.ConfigSeq.version)
}
inline ::int32_t ConfigSeq::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_;
}
inline void ConfigSeq::_internal_set_version(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.version_ = value;
}

// -------------------------------------------------------------------

// QueryUinPackageUsageReq

// optional int32 type = 1;
inline bool QueryUinPackageUsageReq::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void QueryUinPackageUsageReq::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t QueryUinPackageUsageReq::type() const {
  // @@protoc_insertion_point(field_get:Flee.QueryUinPackageUsageReq.type)
  return _internal_type();
}
inline void QueryUinPackageUsageReq::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Flee.QueryUinPackageUsageReq.type)
}
inline ::int32_t QueryUinPackageUsageReq::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void QueryUinPackageUsageReq::_internal_set_type(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_ = value;
}

// optional int64 uinFileSize = 2;
inline bool QueryUinPackageUsageReq::has_uinfilesize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void QueryUinPackageUsageReq::clear_uinfilesize() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uinfilesize_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t QueryUinPackageUsageReq::uinfilesize() const {
  // @@protoc_insertion_point(field_get:Flee.QueryUinPackageUsageReq.uinFileSize)
  return _internal_uinfilesize();
}
inline void QueryUinPackageUsageReq::set_uinfilesize(::int64_t value) {
  _internal_set_uinfilesize(value);
  // @@protoc_insertion_point(field_set:Flee.QueryUinPackageUsageReq.uinFileSize)
}
inline ::int64_t QueryUinPackageUsageReq::_internal_uinfilesize() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uinfilesize_;
}
inline void QueryUinPackageUsageReq::_internal_set_uinfilesize(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.uinfilesize_ = value;
}

// -------------------------------------------------------------------

// ReqBody

// repeated .Flee.ConfigSeq configList = 1;
inline int ReqBody::_internal_configlist_size() const {
  return _internal_configlist().size();
}
inline int ReqBody::configlist_size() const {
  return _internal_configlist_size();
}
inline void ReqBody::clear_configlist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configlist_.Clear();
}
inline ::Flee::ConfigSeq* ReqBody::mutable_configlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Flee.ReqBody.configList)
  return _internal_mutable_configlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Flee::ConfigSeq>* ReqBody::mutable_configlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Flee.ReqBody.configList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_configlist();
}
inline const ::Flee::ConfigSeq& ReqBody::configlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Flee.ReqBody.configList)
  return _internal_configlist().Get(index);
}
inline ::Flee::ConfigSeq* ReqBody::add_configlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Flee::ConfigSeq* _add = _internal_mutable_configlist()->Add();
  // @@protoc_insertion_point(field_add:Flee.ReqBody.configList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Flee::ConfigSeq>& ReqBody::configlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Flee.ReqBody.configList)
  return _internal_configlist();
}
inline const ::google::protobuf::RepeatedPtrField<::Flee::ConfigSeq>&
ReqBody::_internal_configlist() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configlist_;
}
inline ::google::protobuf::RepeatedPtrField<::Flee::ConfigSeq>*
ReqBody::_internal_mutable_configlist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.configlist_;
}

// optional string info = 3;
inline bool ReqBody::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ReqBody::clear_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.info_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ReqBody::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Flee.ReqBody.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReqBody::set_info(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Flee.ReqBody.info)
}
inline std::string* ReqBody::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:Flee.ReqBody.info)
  return _s;
}
inline const std::string& ReqBody::_internal_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.info_.Get();
}
inline void ReqBody::_internal_set_info(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.info_.Set(value, GetArena());
}
inline std::string* ReqBody::_internal_mutable_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* ReqBody::release_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Flee.ReqBody.info)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.info_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.info_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ReqBody::set_allocated_info(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.info_.IsDefault()) {
          _impl_.info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Flee.ReqBody.info)
}

// optional string province = 4;
inline bool ReqBody::has_province() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ReqBody::clear_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.province_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ReqBody::province() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Flee.ReqBody.province)
  return _internal_province();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReqBody::set_province(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.province_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Flee.ReqBody.province)
}
inline std::string* ReqBody::mutable_province() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_province();
  // @@protoc_insertion_point(field_mutable:Flee.ReqBody.province)
  return _s;
}
inline const std::string& ReqBody::_internal_province() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.province_.Get();
}
inline void ReqBody::_internal_set_province(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.province_.Set(value, GetArena());
}
inline std::string* ReqBody::_internal_mutable_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.province_.Mutable( GetArena());
}
inline std::string* ReqBody::release_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Flee.ReqBody.province)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.province_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.province_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ReqBody::set_allocated_province(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.province_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.province_.IsDefault()) {
          _impl_.province_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Flee.ReqBody.province)
}

// optional string city = 5;
inline bool ReqBody::has_city() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ReqBody::clear_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.city_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ReqBody::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Flee.ReqBody.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReqBody::set_city(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Flee.ReqBody.city)
}
inline std::string* ReqBody::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:Flee.ReqBody.city)
  return _s;
}
inline const std::string& ReqBody::_internal_city() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.city_.Get();
}
inline void ReqBody::_internal_set_city(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.city_.Set(value, GetArena());
}
inline std::string* ReqBody::_internal_mutable_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* ReqBody::release_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Flee.ReqBody.city)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.city_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.city_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ReqBody::set_allocated_city(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.city_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.city_.IsDefault()) {
          _impl_.city_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Flee.ReqBody.city)
}

// optional int32 reqDebugMsg = 6;
inline bool ReqBody::has_reqdebugmsg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ReqBody::clear_reqdebugmsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reqdebugmsg_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t ReqBody::reqdebugmsg() const {
  // @@protoc_insertion_point(field_get:Flee.ReqBody.reqDebugMsg)
  return _internal_reqdebugmsg();
}
inline void ReqBody::set_reqdebugmsg(::int32_t value) {
  _internal_set_reqdebugmsg(value);
  // @@protoc_insertion_point(field_set:Flee.ReqBody.reqDebugMsg)
}
inline ::int32_t ReqBody::_internal_reqdebugmsg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.reqdebugmsg_;
}
inline void ReqBody::_internal_set_reqdebugmsg(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.reqdebugmsg_ = value;
}

// optional .Flee.QueryUinPackageUsageReq queryUinPackageUsageReq = 101;
inline bool ReqBody::has_queryuinpackageusagereq() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.queryuinpackageusagereq_ != nullptr);
  return value;
}
inline void ReqBody::clear_queryuinpackageusagereq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.queryuinpackageusagereq_ != nullptr) _impl_.queryuinpackageusagereq_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::Flee::QueryUinPackageUsageReq& ReqBody::_internal_queryuinpackageusagereq() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Flee::QueryUinPackageUsageReq* p = _impl_.queryuinpackageusagereq_;
  return p != nullptr ? *p : reinterpret_cast<const ::Flee::QueryUinPackageUsageReq&>(::Flee::_QueryUinPackageUsageReq_default_instance_);
}
inline const ::Flee::QueryUinPackageUsageReq& ReqBody::queryuinpackageusagereq() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Flee.ReqBody.queryUinPackageUsageReq)
  return _internal_queryuinpackageusagereq();
}
inline void ReqBody::unsafe_arena_set_allocated_queryuinpackageusagereq(::Flee::QueryUinPackageUsageReq* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.queryuinpackageusagereq_);
  }
  _impl_.queryuinpackageusagereq_ = reinterpret_cast<::Flee::QueryUinPackageUsageReq*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Flee.ReqBody.queryUinPackageUsageReq)
}
inline ::Flee::QueryUinPackageUsageReq* ReqBody::release_queryuinpackageusagereq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Flee::QueryUinPackageUsageReq* released = _impl_.queryuinpackageusagereq_;
  _impl_.queryuinpackageusagereq_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Flee::QueryUinPackageUsageReq* ReqBody::unsafe_arena_release_queryuinpackageusagereq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Flee.ReqBody.queryUinPackageUsageReq)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Flee::QueryUinPackageUsageReq* temp = _impl_.queryuinpackageusagereq_;
  _impl_.queryuinpackageusagereq_ = nullptr;
  return temp;
}
inline ::Flee::QueryUinPackageUsageReq* ReqBody::_internal_mutable_queryuinpackageusagereq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.queryuinpackageusagereq_ == nullptr) {
    auto* p = CreateMaybeMessage<::Flee::QueryUinPackageUsageReq>(GetArena());
    _impl_.queryuinpackageusagereq_ = reinterpret_cast<::Flee::QueryUinPackageUsageReq*>(p);
  }
  return _impl_.queryuinpackageusagereq_;
}
inline ::Flee::QueryUinPackageUsageReq* ReqBody::mutable_queryuinpackageusagereq() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::Flee::QueryUinPackageUsageReq* _msg = _internal_mutable_queryuinpackageusagereq();
  // @@protoc_insertion_point(field_mutable:Flee.ReqBody.queryUinPackageUsageReq)
  return _msg;
}
inline void ReqBody::set_allocated_queryuinpackageusagereq(::Flee::QueryUinPackageUsageReq* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Flee::QueryUinPackageUsageReq*>(_impl_.queryuinpackageusagereq_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::Flee::QueryUinPackageUsageReq*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.queryuinpackageusagereq_ = reinterpret_cast<::Flee::QueryUinPackageUsageReq*>(value);
  // @@protoc_insertion_point(field_set_allocated:Flee.ReqBody.queryUinPackageUsageReq)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Flee


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Oidb0x769_2eproto_2epb_2eh
