// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Oidb0x769.proto

#include "Oidb0x769.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Flee {

inline constexpr QueryUinPackageUsageReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uinfilesize_{::int64_t{0}},
        type_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryUinPackageUsageReq::QueryUinPackageUsageReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryUinPackageUsageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUinPackageUsageReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUinPackageUsageReqDefaultTypeInternal() {}
  union {
    QueryUinPackageUsageReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUinPackageUsageReqDefaultTypeInternal _QueryUinPackageUsageReq_default_instance_;

inline constexpr ConfigSeq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{0},
        version_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConfigSeq::ConfigSeq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ConfigSeqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConfigSeqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConfigSeqDefaultTypeInternal() {}
  union {
    ConfigSeq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConfigSeqDefaultTypeInternal _ConfigSeq_default_instance_;

inline constexpr ReqBody::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        configlist_{},
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        province_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        queryuinpackageusagereq_{nullptr},
        reqdebugmsg_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqBody::ReqBody(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReqBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqBodyDefaultTypeInternal() {}
  union {
    ReqBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqBodyDefaultTypeInternal _ReqBody_default_instance_;
}  // namespace Flee
static ::_pb::Metadata file_level_metadata_Oidb0x769_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Oidb0x769_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Oidb0x769_2eproto = nullptr;
const ::uint32_t TableStruct_Oidb0x769_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::Flee::ConfigSeq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Flee::ConfigSeq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Flee::ConfigSeq, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::Flee::ConfigSeq, _impl_.version_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::Flee::QueryUinPackageUsageReq, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Flee::QueryUinPackageUsageReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Flee::QueryUinPackageUsageReq, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::Flee::QueryUinPackageUsageReq, _impl_.uinfilesize_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_.configlist_),
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_.info_),
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_.province_),
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_.city_),
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_.reqdebugmsg_),
    PROTOBUF_FIELD_OFFSET(::Flee::ReqBody, _impl_.queryuinpackageusagereq_),
    ~0u,
    0,
    1,
    2,
    4,
    3,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Flee::ConfigSeq)},
        {12, 22, -1, sizeof(::Flee::QueryUinPackageUsageReq)},
        {24, 38, -1, sizeof(::Flee::ReqBody)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Flee::_ConfigSeq_default_instance_._instance,
    &::Flee::_QueryUinPackageUsageReq_default_instance_._instance,
    &::Flee::_ReqBody_default_instance_._instance,
};
const char descriptor_table_protodef_Oidb0x769_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017Oidb0x769.proto\022\004Flee\"I\n\tConfigSeq\022\021\n\004"
    "type\030\001 \001(\005H\000\210\001\001\022\024\n\007version\030\002 \001(\005H\001\210\001\001B\007\n"
    "\005_typeB\n\n\010_version\"_\n\027QueryUinPackageUsa"
    "geReq\022\021\n\004type\030\001 \001(\005H\000\210\001\001\022\030\n\013uinFileSize\030"
    "\002 \001(\003H\001\210\001\001B\007\n\005_typeB\016\n\014_uinFileSize\"\225\002\n\007"
    "ReqBody\022#\n\nconfigList\030\001 \003(\0132\017.Flee.Confi"
    "gSeq\022\021\n\004info\030\003 \001(\tH\000\210\001\001\022\025\n\010province\030\004 \001("
    "\tH\001\210\001\001\022\021\n\004city\030\005 \001(\tH\002\210\001\001\022\030\n\013reqDebugMsg"
    "\030\006 \001(\005H\003\210\001\001\022C\n\027queryUinPackageUsageReq\030e"
    " \001(\0132\035.Flee.QueryUinPackageUsageReqH\004\210\001\001"
    "B\007\n\005_infoB\013\n\t_provinceB\007\n\005_cityB\016\n\014_reqD"
    "ebugMsgB\032\n\030_queryUinPackageUsageReqb\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_Oidb0x769_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Oidb0x769_2eproto = {
    false,
    false,
    483,
    descriptor_table_protodef_Oidb0x769_2eproto,
    "Oidb0x769.proto",
    &descriptor_table_Oidb0x769_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_Oidb0x769_2eproto::offsets,
    file_level_metadata_Oidb0x769_2eproto,
    file_level_enum_descriptors_Oidb0x769_2eproto,
    file_level_service_descriptors_Oidb0x769_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Oidb0x769_2eproto_getter() {
  return &descriptor_table_Oidb0x769_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Oidb0x769_2eproto(&descriptor_table_Oidb0x769_2eproto);
namespace Flee {
// ===================================================================

class ConfigSeq::_Internal {
 public:
  using HasBits = decltype(std::declval<ConfigSeq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ConfigSeq::ConfigSeq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Flee.ConfigSeq)
}
ConfigSeq::ConfigSeq(
    ::google::protobuf::Arena* arena, const ConfigSeq& from)
    : ConfigSeq(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ConfigSeq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ConfigSeq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::version_));
}
ConfigSeq::~ConfigSeq() {
  // @@protoc_insertion_point(destructor:Flee.ConfigSeq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ConfigSeq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ConfigSeq::Clear() {
// @@protoc_insertion_point(message_clear_start:Flee.ConfigSeq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.version_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.version_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ConfigSeq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ConfigSeq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ConfigSeq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 version = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConfigSeq, _impl_.version_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_.version_)}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConfigSeq, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 version = 2;
    {PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_.version_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ConfigSeq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Flee.ConfigSeq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_type(), target);
  }

  // optional int32 version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Flee.ConfigSeq)
  return target;
}

::size_t ConfigSeq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Flee.ConfigSeq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

    // optional int32 version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_version());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ConfigSeq::_class_data_ = {
    ConfigSeq::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ConfigSeq::GetClassData() const {
  return &_class_data_;
}

void ConfigSeq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ConfigSeq*>(&to_msg);
  auto& from = static_cast<const ConfigSeq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Flee.ConfigSeq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSeq::CopyFrom(const ConfigSeq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Flee.ConfigSeq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ConfigSeq::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ConfigSeq::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ConfigSeq::InternalSwap(ConfigSeq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_.version_)
      + sizeof(ConfigSeq::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(ConfigSeq, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata ConfigSeq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Oidb0x769_2eproto_getter, &descriptor_table_Oidb0x769_2eproto_once,
      file_level_metadata_Oidb0x769_2eproto[0]);
}
// ===================================================================

class QueryUinPackageUsageReq::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUinPackageUsageReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_uinfilesize(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

QueryUinPackageUsageReq::QueryUinPackageUsageReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Flee.QueryUinPackageUsageReq)
}
QueryUinPackageUsageReq::QueryUinPackageUsageReq(
    ::google::protobuf::Arena* arena, const QueryUinPackageUsageReq& from)
    : QueryUinPackageUsageReq(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryUinPackageUsageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryUinPackageUsageReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uinfilesize_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, uinfilesize_) +
               sizeof(Impl_::type_));
}
QueryUinPackageUsageReq::~QueryUinPackageUsageReq() {
  // @@protoc_insertion_point(destructor:Flee.QueryUinPackageUsageReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryUinPackageUsageReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void QueryUinPackageUsageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Flee.QueryUinPackageUsageReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.uinfilesize_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.uinfilesize_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryUinPackageUsageReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> QueryUinPackageUsageReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryUinPackageUsageReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int64 uinFileSize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryUinPackageUsageReq, _impl_.uinfilesize_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_.uinfilesize_)}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryUinPackageUsageReq, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 uinFileSize = 2;
    {PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_.uinfilesize_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* QueryUinPackageUsageReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Flee.QueryUinPackageUsageReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_type(), target);
  }

  // optional int64 uinFileSize = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_uinfilesize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Flee.QueryUinPackageUsageReq)
  return target;
}

::size_t QueryUinPackageUsageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Flee.QueryUinPackageUsageReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 uinFileSize = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_uinfilesize());
    }

    // optional int32 type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData QueryUinPackageUsageReq::_class_data_ = {
    QueryUinPackageUsageReq::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* QueryUinPackageUsageReq::GetClassData() const {
  return &_class_data_;
}

void QueryUinPackageUsageReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<QueryUinPackageUsageReq*>(&to_msg);
  auto& from = static_cast<const QueryUinPackageUsageReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Flee.QueryUinPackageUsageReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.uinfilesize_ = from._impl_.uinfilesize_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUinPackageUsageReq::CopyFrom(const QueryUinPackageUsageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Flee.QueryUinPackageUsageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryUinPackageUsageReq::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* QueryUinPackageUsageReq::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void QueryUinPackageUsageReq::InternalSwap(QueryUinPackageUsageReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_.type_)
      + sizeof(QueryUinPackageUsageReq::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(QueryUinPackageUsageReq, _impl_.uinfilesize_)>(
          reinterpret_cast<char*>(&_impl_.uinfilesize_),
          reinterpret_cast<char*>(&other->_impl_.uinfilesize_));
}

::google::protobuf::Metadata QueryUinPackageUsageReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Oidb0x769_2eproto_getter, &descriptor_table_Oidb0x769_2eproto_once,
      file_level_metadata_Oidb0x769_2eproto[1]);
}
// ===================================================================

class ReqBody::_Internal {
 public:
  using HasBits = decltype(std::declval<ReqBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReqBody, _impl_._has_bits_);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_province(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_city(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_reqdebugmsg(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::Flee::QueryUinPackageUsageReq& queryuinpackageusagereq(const ReqBody* msg);
  static void set_has_queryuinpackageusagereq(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::Flee::QueryUinPackageUsageReq& ReqBody::_Internal::queryuinpackageusagereq(const ReqBody* msg) {
  return *msg->_impl_.queryuinpackageusagereq_;
}
ReqBody::ReqBody(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Flee.ReqBody)
}
inline PROTOBUF_NDEBUG_INLINE ReqBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        configlist_{visibility, arena, from.configlist_},
        info_(arena, from.info_),
        province_(arena, from.province_),
        city_(arena, from.city_) {}

ReqBody::ReqBody(
    ::google::protobuf::Arena* arena,
    const ReqBody& from)
    : ::google::protobuf::Message(arena) {
  ReqBody* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.queryuinpackageusagereq_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::Flee::QueryUinPackageUsageReq>(arena, *from._impl_.queryuinpackageusagereq_)
                : nullptr;
  _impl_.reqdebugmsg_ = from._impl_.reqdebugmsg_;

  // @@protoc_insertion_point(copy_constructor:Flee.ReqBody)
}
inline PROTOBUF_NDEBUG_INLINE ReqBody::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        configlist_{visibility, arena},
        info_(arena),
        province_(arena),
        city_(arena) {}

inline void ReqBody::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, queryuinpackageusagereq_),
           0,
           offsetof(Impl_, reqdebugmsg_) -
               offsetof(Impl_, queryuinpackageusagereq_) +
               sizeof(Impl_::reqdebugmsg_));
}
ReqBody::~ReqBody() {
  // @@protoc_insertion_point(destructor:Flee.ReqBody)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReqBody::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.info_.Destroy();
  _impl_.province_.Destroy();
  _impl_.city_.Destroy();
  delete _impl_.queryuinpackageusagereq_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ReqBody::Clear() {
// @@protoc_insertion_point(message_clear_start:Flee.ReqBody)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.configlist_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.info_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.province_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.city_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.queryuinpackageusagereq_ != nullptr);
      _impl_.queryuinpackageusagereq_->Clear();
    }
  }
  _impl_.reqdebugmsg_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReqBody::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 37, 7> ReqBody::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReqBody, _impl_._has_bits_),
    0, // no _extensions_
    101, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967234,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReqBody_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Flee.ConfigSeq configList = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.configlist_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string info = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.info_)}},
    // optional string province = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.province_)}},
    // optional string city = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.city_)}},
    // optional int32 reqDebugMsg = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReqBody, _impl_.reqdebugmsg_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.reqdebugmsg_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    101, 0, 1,
    65534, 5,
    65535, 65535
  }}, {{
    // repeated .Flee.ConfigSeq configList = 1;
    {PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.configlist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string info = 3;
    {PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string province = 4;
    {PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.province_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string city = 5;
    {PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.city_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 reqDebugMsg = 6;
    {PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.reqdebugmsg_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .Flee.QueryUinPackageUsageReq queryUinPackageUsageReq = 101;
    {PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.queryuinpackageusagereq_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Flee::ConfigSeq>()},
    {::_pbi::TcParser::GetTable<::Flee::QueryUinPackageUsageReq>()},
  }}, {{
    "\14\0\4\10\4\0\0\0"
    "Flee.ReqBody"
    "info"
    "province"
    "city"
  }},
};

::uint8_t* ReqBody::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Flee.ReqBody)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Flee.ConfigSeq configList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_configlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_configlist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string info = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_info();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Flee.ReqBody.info");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string province = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_province();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Flee.ReqBody.province");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string city = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_city();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Flee.ReqBody.city");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional int32 reqDebugMsg = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_reqdebugmsg(), target);
  }

  // optional .Flee.QueryUinPackageUsageReq queryUinPackageUsageReq = 101;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        101, _Internal::queryuinpackageusagereq(this),
        _Internal::queryuinpackageusagereq(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Flee.ReqBody)
  return target;
}

::size_t ReqBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Flee.ReqBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Flee.ConfigSeq configList = 1;
  total_size += 1UL * this->_internal_configlist_size();
  for (const auto& msg : this->_internal_configlist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string info = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_info());
    }

    // optional string province = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_province());
    }

    // optional string city = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_city());
    }

    // optional .Flee.QueryUinPackageUsageReq queryUinPackageUsageReq = 101;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.queryuinpackageusagereq_);
    }

    // optional int32 reqDebugMsg = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_reqdebugmsg());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReqBody::_class_data_ = {
    ReqBody::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ReqBody::GetClassData() const {
  return &_class_data_;
}

void ReqBody::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReqBody*>(&to_msg);
  auto& from = static_cast<const ReqBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Flee.ReqBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_configlist()->MergeFrom(
      from._internal_configlist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_info(from._internal_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_province(from._internal_province());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_city(from._internal_city());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_queryuinpackageusagereq()->::Flee::QueryUinPackageUsageReq::MergeFrom(
          from._internal_queryuinpackageusagereq());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.reqdebugmsg_ = from._impl_.reqdebugmsg_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqBody::CopyFrom(const ReqBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Flee.ReqBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReqBody::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ReqBody::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ReqBody::InternalSwap(ReqBody* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.configlist_.InternalSwap(&other->_impl_.configlist_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.province_, &other->_impl_.province_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.reqdebugmsg_)
      + sizeof(ReqBody::_impl_.reqdebugmsg_)
      - PROTOBUF_FIELD_OFFSET(ReqBody, _impl_.queryuinpackageusagereq_)>(
          reinterpret_cast<char*>(&_impl_.queryuinpackageusagereq_),
          reinterpret_cast<char*>(&other->_impl_.queryuinpackageusagereq_));
}

::google::protobuf::Metadata ReqBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Oidb0x769_2eproto_getter, &descriptor_table_Oidb0x769_2eproto_once,
      file_level_metadata_Oidb0x769_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Flee
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
